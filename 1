public class MyStack<T>
{
    private List<T> _items;

    public MyStack()
    {
        _items = new List<T>();
    }

    // 1. Count(): Returns the number of items in the stack.
    public int Count()
    {
        return _items.Count;
    }

    // 2. Pop(): Removes and returns the item at the top of the stack.
    public T Pop()
    {
        if (_items.Count == 0)
        {
            throw new InvalidOperationException("The stack is empty.");
        }

        T item = _items[_items.Count - 1];
        _items.RemoveAt(_items.Count - 1);
        return item;
    }

    // 3. Push(): Adds an item to the top of the stack.
    public void Push(T item)
    {
        _items.Add(item);
    }
}
